Problem Statement:

Given a non-empty array of digits representing a non-negative integer, plus one to the integer.
The digits are stored such that the most significant digit is at the head of the list, and each element in the array contain a single digit.
You may assume the integer does not contain any leading zero, except the number 0 itself.

Solution:

class Solution:
    def plusOne(self, digits: List[int]) -> List[int]:
        string=""
        for i in digits:
            string+=str(i)
        total=int(string)+1
        li=[i for i in str(total)]
        return(li)
        
        ###### O(N); O(N)
         def adjustcarry(digits):
            carry=0
            for each in range(len(digits)-1,-1,-1):
                # print(digits)
                num=carry+digits[each]
                quo,rem=num//10, num%10
                if quo:
                    carry=quo
                    digits[each]=rem
                else:
                    carry=0
                    digits[each]=num
                    break
                    
            return [1]+digits if carry else digits
        carry=0
        digits[-1]=digits[-1]+1
        if digits[-1]>9:
            return adjustcarry(digits)
        else:
            return digits
        
