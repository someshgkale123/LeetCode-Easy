Problem Statement:

Write an algorithm to determine if a number is "happy".
A happy number is a number defined by the following process: Starting with any positive integer, 
replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1 (where it will stay), 
or it loops endlessly in a cycle which does not include 1. Those numbers for which this process ends in 1 are happy numbers.

Example: 
Input: 19
Output: true
Explanation: 
12 + 92 = 82
82 + 22 = 68
62 + 82 = 100
12 + 02 + 02 = 1


Solution:
class Solution:
    def isHappy(self, n: int) -> bool:
        li=set()
        while 1 not in li:
            summ=0
            for i in str(n):
                summ+=int(i)**2
            if summ in li:
                return False
            else:
                li.add(summ)
                n=summ
            print(li)
        return True
        
        ######### O(logn) ; O(1)
        def next(num):
        new=0
        while num:
            new+=(num%10)**2
            num=num//10
        return new
        
        slow=n
        fast=next(n)
        
        while fast !=slow and fast!=1:
            slow=next(slow)
            fast=next(next(fast))
        return fast==1
